{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://trading-risk-game-ts/./client/src/utils/api.ts","webpack://trading-risk-game-ts/./client/src/utils/toast.ts","webpack://trading-risk-game-ts/./client/src/modules/profitGrades.ts","webpack://trading-risk-game-ts/./client/src/modules/tutorial.ts","webpack://trading-risk-game-ts/./client/src/script.ts"],"sourcesContent":["const API_BASE = '';\nexport async function get(endpoint) {\n    const response = await fetch(`${API_BASE}${endpoint}`);\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n}\nexport async function post(endpoint, data) {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n}\nexport async function put(endpoint, data) {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n    if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n}\n","export function showToast(message, type = 'success') {\n    const container = document.getElementById('toast-container') || createToastContainer();\n    const toast = document.createElement('div');\n    toast.className = `toast ${type}`;\n    toast.textContent = message;\n    container.appendChild(toast);\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n        toast.style.animation = 'toastSlideOut 0.3s ease forwards';\n        setTimeout(() => {\n            if (toast.parentNode) {\n                toast.parentNode.removeChild(toast);\n            }\n        }, 300);\n    }, 3000);\n}\nfunction createToastContainer() {\n    const container = document.createElement('div');\n    container.id = 'toast-container';\n    container.className = 'toast-container';\n    document.body.appendChild(container);\n    return container;\n}\n","const PROFIT_GRADES = [\n    {\n        id: 'breakeven',\n        title: 'Беззбиткові',\n        description: '5 тейків + 10 стопів = 0% прибутку',\n        minProfit: 0,\n        takes: 5,\n        stops: 10,\n        minWinRate: 33.3,\n        color: '#ffd93d',\n        emoji: '⚖️'\n    },\n    {\n        id: 'light',\n        title: 'Легкий прибуток',\n        description: '6 тейків + 9 стопів = 3% прибутку',\n        minProfit: 3,\n        takes: 6,\n        stops: 9,\n        minWinRate: 40,\n        color: '#06d6a0',\n        emoji: '🌱'\n    },\n    {\n        id: 'good',\n        title: 'Хороший прибуток',\n        description: '7 тейків + 8 стопів = 6% прибутку',\n        minProfit: 6,\n        takes: 7,\n        stops: 8,\n        minWinRate: 45,\n        color: '#10b981',\n        emoji: '💚'\n    },\n    {\n        id: 'excellent',\n        title: 'Відмінний прибуток',\n        description: '8 тейків + 7 стопів = 9% прибутку',\n        minProfit: 9,\n        takes: 8,\n        stops: 7,\n        minWinRate: 50,\n        color: '#8b5cf6',\n        emoji: '💎'\n    },\n    {\n        id: 'amazing',\n        title: 'Неймовірний прибуток',\n        description: '9 тейків + 6 стопів = 12% прибутку',\n        minProfit: 12,\n        takes: 9,\n        stops: 6,\n        minWinRate: 60,\n        color: '#f59e0b',\n        emoji: '🚀'\n    }\n];\nfunction getCurrentGrade(takes) {\n    // Якщо немає точного співпадіння, знаходимо найближчу нижню градацію за кількістю тейків\n    const currentGrade = PROFIT_GRADES.reverse().find((grade) => takes >= grade.takes);\n    if (!currentGrade) {\n        return null;\n    }\n    return currentGrade;\n}\nexport function updateProfitGradeDisplay(takes, stops, profit) {\n    const container = document.getElementById('profit-grades-list');\n    const currentLevelDisplay = document.getElementById('current-level-display');\n    currentLevelDisplay.classList.remove('current');\n    container.innerHTML = '';\n    const totalPositions = takes + stops;\n    const winRate = totalPositions > 0 ? (takes / totalPositions) * 100 : 0;\n    let currentGrade = getCurrentGrade(takes);\n    PROFIT_GRADES.reverse().forEach(grade => {\n        const item = document.createElement('div');\n        item.className = 'profit-grade-item';\n        const achieved = takes >= grade.takes;\n        const isCurrent = grade.id === currentGrade?.id;\n        if (achieved) {\n            item.classList.add('achieved');\n            currentGrade = grade;\n        }\n        if (isCurrent) {\n            item.classList.add('current');\n        }\n        item.innerHTML = `\n      <div class=\"grade-header\">\n        <span class=\"grade-title\">${grade.emoji} ${grade.title}</span>\n        <span class=\"grade-percentage\">${grade.minProfit}%+</span>\n      </div>\n      <div class=\"grade-requirement\">Мінімум ${grade.minProfit}% прибутку</div>\n      <div class=\"grade-winrate\">Win-rate: ${grade.minWinRate}%+</div>\n      <div class=\"grade-winrate\">Win-rate: ${grade.description}</div>\n    `;\n        container.appendChild(item);\n    });\n    // Update current level display\n    if (currentGrade) {\n        currentLevelDisplay.textContent = `Поточний рівень: ${currentGrade.title}`;\n        currentLevelDisplay.className = `current-level-display.grade-${currentGrade.id}`;\n    }\n    else {\n        currentLevelDisplay.textContent = 'Поточний рівень: Початковий рівень';\n        currentLevelDisplay.className = 'current-level-display.initial';\n    }\n}\n","import { showToast } from '../utils/toast';\nconst TUTORIAL_STEPS = [\n    {\n        title: 'Вітаємо в грі!',\n        text: 'Це гра для вивчення ризик-менеджменту в трейдингу. Ви будете симулювати торгові позиції та дивитися на результати.'\n    },\n    {\n        title: 'Торгові позиції',\n        text: 'Кожна клітинка представляє торгову позицію. Клікайте по них, щоб позначити як тейк (прибуток) або стоп (збиток).',\n        target: '#positions-grid'\n    },\n    {\n        title: 'Статистика',\n        text: 'Тут відображається ваша статистика: кількість тейків, стопів, загальний прибуток та win-rate.',\n        target: '.stats-panel'\n    },\n    {\n        title: 'Налаштування',\n        text: 'Тут ви можете налаштувати ризик на позицію та співвідношення прибутку (RR).',\n        target: '.settings-section'\n    },\n    {\n        title: 'Градації прибутку',\n        text: 'Система показує ваш прогрес через різні рівні прибутковості.',\n        target: '.profit-grades-section'\n    },\n    {\n        title: 'Готово!',\n        text: 'Тепер ви знаєте основи. Почніть клікати по позиціях та спостерігайте за своїми результатами!'\n    }\n];\nclass TutorialManager {\n    constructor() {\n        this.currentStep = 0;\n    }\n    start() {\n        this.currentStep = 0;\n        this.createOverlay();\n        this.showStep();\n    }\n    createOverlay() {\n        this.overlay = document.createElement('div');\n        this.overlay.className = 'tutorial-overlay';\n        this.overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.7);\n      z-index: 9999;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `;\n        this.modal = document.createElement('div');\n        this.modal.className = 'tutorial-modal';\n        this.modal.style.cssText = `\n      background: var(--surface-color);\n      padding: 2rem;\n      border-radius: 16px;\n      max-width: 500px;\n      margin: 1rem;\n      text-align: center;\n      border: 1px solid var(--border-color);\n      box-shadow: var(--shadow-lg);\n    `;\n        this.overlay.appendChild(this.modal);\n        document.body.appendChild(this.overlay);\n    }\n    showStep() {\n        const step = TUTORIAL_STEPS[this.currentStep];\n        if (!step || !this.modal)\n            return;\n        // Highlight target element\n        this.highlightTarget(step.target);\n        this.modal.innerHTML = `\n      <h3 style=\"margin-bottom: 1rem; font-size: 1.25rem; font-weight: 700;\">${step.title}</h3>\n      <p style=\"margin-bottom: 2rem; color: var(--text-muted);\">${step.text}</p>\n      <div style=\"display: flex; gap: 1rem; justify-content: center;\">\n        ${this.currentStep > 0 ? '<button id=\"tutorial-prev\" class=\"btn btn-secondary\">Назад</button>' : ''}\n        <button id=\"tutorial-next\" class=\"btn btn-primary\">\n          ${this.currentStep === TUTORIAL_STEPS.length - 1 ? 'Завершити' : 'Далі'}\n        </button>\n        <button id=\"tutorial-skip\" class=\"btn btn-outline\">Пропустити</button>\n      </div>\n    `;\n        // Add event listeners\n        this.modal.querySelector('#tutorial-next')?.addEventListener('click', () => {\n            if (this.currentStep === TUTORIAL_STEPS.length - 1) {\n                this.finish();\n            }\n            else {\n                this.next();\n            }\n        });\n        this.modal.querySelector('#tutorial-prev')?.addEventListener('click', () => {\n            this.prev();\n        });\n        this.modal.querySelector('#tutorial-skip')?.addEventListener('click', () => {\n            this.finish();\n        });\n        // Execute step action\n        if (step.action) {\n            step.action();\n        }\n    }\n    highlightTarget(selector) {\n        // Remove previous highlights\n        document.querySelectorAll('.tutorial-highlight').forEach(el => {\n            el.classList.remove('tutorial-highlight');\n        });\n        if (selector) {\n            const target = document.querySelector(selector);\n            if (target) {\n                target.classList.add('tutorial-highlight');\n                // Add highlight CSS if not exists\n                if (!document.querySelector('#tutorial-highlight-style')) {\n                    const style = document.createElement('style');\n                    style.id = 'tutorial-highlight-style';\n                    style.textContent = `\n            .tutorial-highlight {\n              position: relative;\n              z-index: 10000;\n              box-shadow: 0 0 0 4px var(--primary-color), 0 0 0 8px rgba(139, 92, 246, 0.3) !important;\n              border-radius: 8px !important;\n            }\n          `;\n                    document.head.appendChild(style);\n                }\n            }\n        }\n    }\n    next() {\n        this.currentStep++;\n        this.showStep();\n    }\n    prev() {\n        this.currentStep--;\n        this.showStep();\n    }\n    finish() {\n        if (this.overlay) {\n            document.body.removeChild(this.overlay);\n        }\n        // Remove highlights\n        document.querySelectorAll('.tutorial-highlight').forEach(el => {\n            el.classList.remove('tutorial-highlight');\n        });\n        // Remove highlight style\n        const style = document.querySelector('#tutorial-highlight-style');\n        if (style) {\n            style.remove();\n        }\n        showToast('Туторіал завершено!', 'success');\n    }\n}\nexport const tutorialManager = new TutorialManager();\n","import { get, put, post } from './utils/api';\nimport { showToast } from './utils/toast';\nimport { updateProfitGradeDisplay } from './modules/profitGrades';\nimport { tutorialManager } from './modules/tutorial';\nclass RiskManagementGame {\n    constructor() {\n        this.gameState = {\n            positions: [],\n            settings: {\n                id: 1,\n                risk_per_position: 1.0,\n                reward_ratio: 2.0,\n                tutorial_completed: false,\n                tutorial_skipped_forever: false\n            },\n            stats: {\n                takes: 0,\n                stops: 0,\n                profit: 0,\n                winRate: 0\n            }\n        };\n    }\n    async init() {\n        try {\n            // Initialize theme\n            this.initTheme();\n            await this.loadGameState();\n            this.setupUI();\n            this.checkTutorial();\n            console.log('✅ Гра ініціалізована успішно');\n        }\n        catch (error) {\n            console.error('❌ Помилка ініціалізації гри:', error);\n            showToast('Помилка завантаження гри', 'error');\n        }\n    }\n    initTheme() {\n        const savedTheme = localStorage.getItem('theme') || 'light';\n        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        const theme = savedTheme === 'auto' ? (systemPrefersDark ? 'dark' : 'light') : savedTheme;\n        document.documentElement.setAttribute('data-theme', theme);\n        this.updateThemeToggle(theme);\n    }\n    toggleTheme() {\n        const currentTheme = document.documentElement.getAttribute('data-theme');\n        const newTheme = currentTheme === 'light' ? 'dark' : 'light';\n        document.documentElement.setAttribute('data-theme', newTheme);\n        localStorage.setItem('theme', newTheme);\n        this.updateThemeToggle(newTheme);\n    }\n    updateThemeToggle(theme) {\n        const toggle = document.getElementById('theme-toggle');\n        if (toggle) {\n            toggle.innerHTML = theme === 'light' ? '🌙' : '☀️';\n            toggle.setAttribute('aria-label', theme === 'light' ? 'Switch to dark mode' : 'Switch to light mode');\n        }\n    }\n    async loadGameState() {\n        try {\n            // Завантажуємо дані паралельно\n            const [positions, settings] = await Promise.all([\n                get('/api/positions'),\n                get('/api/settings')\n            ]);\n            //@ts-ignore\n            this.gameState.positions = positions;\n            //@ts-ignore\n            this.gameState.settings = settings;\n            this.calculateStats();\n        }\n        catch (error) {\n            console.error('Помилка завантаження стану гри:', error);\n            throw error;\n        }\n    }\n    setupUI() {\n        this.createPositionsGrid();\n        this.updateStatsDisplay();\n        this.updateSettingsUI();\n        this.setupEventListeners();\n    }\n    createPositionsGrid() {\n        const grid = document.getElementById('positions-grid');\n        grid.innerHTML = '';\n        this.gameState.positions.forEach(position => {\n            const card = document.createElement('div');\n            card.className = `position-card ${position.result}`;\n            card.textContent = position.id.toString();\n            card.dataset.id = position.id.toString();\n            card.addEventListener('click', () => this.handlePositionClick(position.id));\n            grid.appendChild(card);\n        });\n    }\n    async handlePositionClick(positionId) {\n        try {\n            const position = this.gameState.positions.find(p => p.id === positionId);\n            if (!position)\n                return;\n            // Циклічне перемикання станів\n            const states = ['none', 'take', 'stop'];\n            const currentIndex = states.indexOf(position.result);\n            const nextState = states[(currentIndex + 1) % states.length];\n            // Оновлюємо на сервері\n            await put(`/api/positions/${positionId}`, { result: nextState });\n            // Оновлюємо локальний стан\n            position.result = nextState;\n            // Оновлюємо UI\n            const card = document.querySelector(`[data-id=\"${positionId}\"]`);\n            card.className = `position-card ${nextState}`;\n            // Перераховуємо статистику\n            this.calculateStats();\n            this.updateStatsDisplay();\n        }\n        catch (error) {\n            console.error('Помилка оновлення позиції:', error);\n            showToast('Помилка оновлення позиції', 'error');\n        }\n    }\n    calculateStats() {\n        const takes = this.gameState.positions.filter(p => p.result === 'take').length;\n        const stops = this.gameState.positions.filter(p => p.result === 'stop').length;\n        const totalPositions = takes + stops;\n        // Розрахунок прибутку: тейки дають +RR%, стопи дають -1%\n        const profit = (takes * this.gameState.settings.reward_ratio) + (stops * -1);\n        const winRate = totalPositions > 0 ? (takes / totalPositions) * 100 : 0;\n        this.gameState.stats = {\n            takes,\n            stops,\n            profit: parseFloat(profit.toFixed(1)),\n            winRate: parseFloat(winRate.toFixed(1))\n        };\n    }\n    updateStatsDisplay() {\n        document.getElementById('takes-count').textContent = this.gameState.stats.takes.toString();\n        document.getElementById('stops-count').textContent = this.gameState.stats.stops.toString();\n        document.getElementById('profit-pct').textContent = `${this.gameState.stats.profit}%`;\n        document.getElementById('win-rate').textContent = `${this.gameState.stats.winRate}%`;\n        // Оновлюємо градації прибутку\n        updateProfitGradeDisplay(this.gameState.stats.takes, this.gameState.stats.stops, this.gameState.stats.profit);\n        // Оновлюємо мотиваційне повідомлення\n        this.updateMotivationMessage();\n    }\n    updateMotivationMessage() {\n        const msgEl = document.getElementById('motivation-msg');\n        const { takes, stops, profit } = this.gameState.stats;\n        if (takes === 0 && stops === 0) {\n            msgEl.textContent = 'Почніть торгувати, щоб побачити результати!';\n        }\n        else if (profit === 0 && takes === 5 && stops === 10) {\n            msgEl.textContent = '⚖️ Ідеальна беззбитковість! Тепер спробуйте досягти прибутку.';\n        }\n        else if (profit > 0) {\n            msgEl.textContent = `💰 Чудово! Ви в прибутку ${profit}%. Продовжуйте у тому ж дусі!`;\n        }\n        else if (profit < 0) {\n            msgEl.textContent = '📉 Не переживайте через стопи - вони частина стратегії. Трейдинг - це довгострокова гра!';\n        }\n        else {\n            msgEl.textContent = 'Продовжуйте торгувати, щоб побачити свій прогрес!';\n        }\n    }\n    updateSettingsUI() {\n        document.getElementById('risk-input').value =\n            this.gameState.settings.risk_per_position.toString();\n        document.getElementById('reward-input').value =\n            this.gameState.settings.reward_ratio.toString();\n    }\n    setupEventListeners() {\n        // Theme toggle\n        document.getElementById('theme-toggle')?.addEventListener('click', () => {\n            this.toggleTheme();\n        });\n        // Збереження налаштувань\n        document.getElementById('save-settings').addEventListener('click', async () => {\n            await this.saveSettings();\n        });\n        // Скидання позицій\n        document.getElementById('reset-positions').addEventListener('click', async () => {\n            await this.resetPositions();\n        });\n        // Показати гайд\n        document.getElementById('show-guide-btn').addEventListener('click', () => {\n            tutorialManager.start();\n        });\n        // Модальне вікно туторіалу\n        document.getElementById('start-tutorial').addEventListener('click', () => {\n            this.hideTutorialModal();\n            tutorialManager.start();\n        });\n        document.getElementById('skip-tutorial').addEventListener('click', () => {\n            this.hideTutorialModal();\n        });\n        document.getElementById('skip-forever').addEventListener('click', async () => {\n            try {\n                await put('/api/settings', { tutorial_skipped_forever: true });\n                this.gameState.settings.tutorial_skipped_forever = true;\n                this.hideTutorialModal();\n                showToast('Туторіал відключено назавжди', 'success');\n            }\n            catch (error) {\n                console.error('Помилка збереження налаштувань туторіалу:', error);\n            }\n        });\n    }\n    async saveSettings() {\n        try {\n            const riskInput = document.getElementById('risk-input');\n            const rewardInput = document.getElementById('reward-input');\n            const risk = parseFloat(riskInput.value);\n            const reward = parseFloat(rewardInput.value);\n            if (risk < 0.1 || risk > 10) {\n                showToast('Ризик має бути від 0.1% до 10%', 'error');\n                return;\n            }\n            if (reward < 1 || reward > 5) {\n                showToast('Співвідношення прибутку має бути від 1 до 5', 'error');\n                return;\n            }\n            await put('/api/settings', {\n                risk_per_position: risk,\n                reward_ratio: reward\n            });\n            this.gameState.settings.risk_per_position = risk;\n            this.gameState.settings.reward_ratio = reward;\n            // Перераховуємо статистику з новими налаштуваннями\n            this.calculateStats();\n            this.updateStatsDisplay();\n            showToast('Налаштування збережено!', 'success');\n        }\n        catch (error) {\n            console.error('Помилка збереження налаштувань:', error);\n            showToast('Помилка збереження налаштувань', 'error');\n        }\n    }\n    async resetPositions() {\n        try {\n            await post('/api/positions/reset', {});\n            // Оновлюємо локальний стан\n            this.gameState.positions.forEach(p => p.result = 'none');\n            this.createPositionsGrid();\n            this.calculateStats();\n            this.updateStatsDisplay();\n            showToast('Всі позиції скинуті!', 'success');\n        }\n        catch (error) {\n            console.error('Помилка скидання позицій:', error);\n            showToast('Помилка скидання позицій', 'error');\n        }\n    }\n    checkTutorial() {\n        if (!this.gameState.settings.tutorial_completed &&\n            !this.gameState.settings.tutorial_skipped_forever) {\n            this.showTutorialModal();\n        }\n    }\n    showTutorialModal() {\n        const modal = document.getElementById('tutorial-modal');\n        modal.classList.add('show');\n    }\n    hideTutorialModal() {\n        const modal = document.getElementById('tutorial-modal');\n        modal.classList.remove('show');\n    }\n}\n// Ініціалізація гри після завантаження DOM\ndocument.addEventListener('DOMContentLoaded', () => {\n    const game = new RiskManagementGame();\n    game.init();\n});\n"],"names":["async","get","endpoint","response","fetch","ok","Error","status","json","put","data","method","headers","body","JSON","stringify","showToast","message","type","container","document","getElementById","createElement","id","className","appendChild","createToastContainer","toast","textContent","setTimeout","style","animation","parentNode","removeChild","PROFIT_GRADES","title","description","minProfit","takes","stops","minWinRate","color","emoji","TUTORIAL_STEPS","text","target","tutorialManager","constructor","this","currentStep","start","createOverlay","showStep","overlay","cssText","modal","step","highlightTarget","innerHTML","length","querySelector","addEventListener","finish","next","prev","action","selector","querySelectorAll","forEach","el","classList","remove","add","head","RiskManagementGame","gameState","positions","settings","risk_per_position","reward_ratio","tutorial_completed","tutorial_skipped_forever","stats","profit","winRate","init","initTheme","loadGameState","setupUI","checkTutorial","console","log","error","savedTheme","localStorage","getItem","systemPrefersDark","window","matchMedia","matches","theme","documentElement","setAttribute","updateThemeToggle","toggleTheme","newTheme","getAttribute","setItem","toggle","Promise","all","calculateStats","createPositionsGrid","updateStatsDisplay","updateSettingsUI","setupEventListeners","grid","position","card","result","toString","dataset","handlePositionClick","positionId","find","p","states","currentIndex","indexOf","nextState","filter","totalPositions","parseFloat","toFixed","currentLevelDisplay","currentGrade","reverse","grade","getCurrentGrade","item","achieved","isCurrent","updateProfitGradeDisplay","updateMotivationMessage","msgEl","value","saveSettings","resetPositions","hideTutorialModal","riskInput","rewardInput","risk","reward","post","showTutorialModal"],"sourceRoot":""}