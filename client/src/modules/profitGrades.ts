import { ProfitGrade } from '../types';

const PROFIT_GRADES: ProfitGrade[] = [
  {
    id: 'breakeven',
    title: '–ë–µ–∑–∑–±–∏—Ç–∫–æ–≤—ñ',
    description: '5 —Ç–µ–π–∫—ñ–≤ + 10 —Å—Ç–æ–ø—ñ–≤ = 0% –ø—Ä–∏–±—É—Ç–∫—É',
    minProfit: 0,
    takes: 5, 
    stops: 10, 
    minWinRate: 33.3,
    color: '#ffd93d',
    emoji: '‚öñÔ∏è'
  },
  {
    id: 'light',
    title: '–õ–µ–≥–∫–∏–π –ø—Ä–∏–±—É—Ç–æ–∫',
    description: '6 —Ç–µ–π–∫—ñ–≤ + 9 —Å—Ç–æ–ø—ñ–≤ = 3% –ø—Ä–∏–±—É—Ç–∫—É',
    minProfit: 3,
    takes: 6, 
    stops: 9, 
    minWinRate: 40,
    color: '#06d6a0',
    emoji: 'üå±'
  },
  {
    id: 'good',
    title: '–•–æ—Ä–æ—à–∏–π –ø—Ä–∏–±—É—Ç–æ–∫',
     description: '7 —Ç–µ–π–∫—ñ–≤ + 8 —Å—Ç–æ–ø—ñ–≤ = 6% –ø—Ä–∏–±—É—Ç–∫—É',
    minProfit: 6,
    takes: 7, 
    stops: 8, 
    minWinRate: 45,
    color: '#10b981',
    emoji: 'üíö'
  },
  {
    id: 'excellent',
    title: '–í—ñ–¥–º—ñ–Ω–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫',
    description: '8 —Ç–µ–π–∫—ñ–≤ + 7 —Å—Ç–æ–ø—ñ–≤ = 9% –ø—Ä–∏–±—É—Ç–∫—É',
    minProfit: 9,
    takes: 8, 
    stops: 7, 
    minWinRate: 50,
    color: '#8b5cf6',
    emoji: 'üíé'
  },
  {
    id: 'amazing',
    title: '–ù–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫',
    description: '9 —Ç–µ–π–∫—ñ–≤ + 6 —Å—Ç–æ–ø—ñ–≤ = 12% –ø—Ä–∏–±—É—Ç–∫—É',
    minProfit: 12,
    takes: 9, 
    stops: 6,
    minWinRate: 60,
    color: '#f59e0b',
    emoji: 'üöÄ'
  }
];

function getCurrentGrade(takes: number): ProfitGrade | null {
  // –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–æ—á–Ω–æ–≥–æ —Å–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è, –∑–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–±–ª–∏–∂—á—É –Ω–∏–∂–Ω—é –≥—Ä–∞–¥–∞—Ü—ñ—é –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ç–µ–π–∫—ñ–≤
  const currentGrade = PROFIT_GRADES.reverse().find((grade) => takes >= grade.takes);

  if(!currentGrade){
    return null;
  }

  return currentGrade;
}

export function updateProfitGradeDisplay(takes: number, stops: number, profit: number) {
  const container = document.getElementById('profit-grades-list')!;
  const currentLevelDisplay = document.getElementById('current-level-display')!;
  currentLevelDisplay.classList.remove('current');
  
  container.innerHTML = '';

  const totalPositions = takes + stops;
  const winRate = totalPositions > 0 ? (takes / totalPositions) * 100 : 0;

  let currentGrade = getCurrentGrade(takes)

  PROFIT_GRADES.reverse().forEach(grade => {
    const item = document.createElement('div');
    item.className = 'profit-grade-item';

    const achieved = takes >= grade.takes;
    const isCurrent = grade.id === currentGrade?.id

    if (achieved) {
      item.classList.add('achieved');
      currentGrade = grade;
    }

    if (isCurrent) {
      item.classList.add('current');
    }

    item.innerHTML = `
      <div class="grade-header">
        <span class="grade-title">${grade.emoji} ${grade.title}</span>
        <span class="grade-percentage">${grade.minProfit}%+</span>
      </div>
      <div class="grade-requirement">–ú—ñ–Ω—ñ–º—É–º ${grade.minProfit}% –ø—Ä–∏–±—É—Ç–∫—É</div>
      <div class="grade-winrate">Win-rate: ${grade.minWinRate}%+</div>
      <div class="grade-winrate">Win-rate: ${grade.description}</div>
    `;

    container.appendChild(item);
  });

  // Update current level display
  if (currentGrade) {
    currentLevelDisplay.textContent = `–ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å: ${currentGrade.title}`;
    currentLevelDisplay.className = `current-level-display.grade-${currentGrade.id}`;
  } else {
    currentLevelDisplay.textContent = '–ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å: –ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å';
    currentLevelDisplay.className = 'current-level-display.initial';
  }
}