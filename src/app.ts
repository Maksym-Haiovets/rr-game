import express from 'express';
import path from 'path';
import { initDatabase, getDatabase } from './database/init';
import positionsRouter from './routes/positions';
import settingsRouter from './routes/settings';

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json());
app.use(express.static(path.join(__dirname, '../public')));

// API Routes
app.use('/api/positions', positionsRouter);
app.use('/api/settings', settingsRouter);

// Serve the main page for all other routes (SPA support)
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, '../public/index.html'));
});

// Initialize database and start server
async function startServer() {
  try {
    await initDatabase();

    const server = app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:${PORT}`);
    });

    // –î–æ–¥–∞–π —Ü–µ–π –±–ª–æ–∫ —Ç—É—Ç ‚ñº‚ñº‚ñº
     process.on('SIGINT', async () => {
      console.log('üõë –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª SIGINT. –ó—É–ø–∏–Ω—è—î–º–æ —Å–µ—Ä–≤–µ—Ä...');
       server.close( async () => {
        console.log('üîí –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ. –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑ º—î–¥–Ω–∞–Ω–Ω—è –∑ –ë–î...');
        const db = await getDatabase();

        db.close(() => {
          console.log('‚úÖ –ó º—î–¥–Ω–∞–Ω–Ω—è –∑ –ë–î –∑–∞–∫—Ä–∏—Ç–æ');
          process.exit(0);
        });
      });
    });
    // ‚ñ≤‚ñ≤‚ñ≤ –ö—ñ–Ω–µ—Ü—å –Ω–æ–≤–æ–≥–æ –∫–æ–¥—É
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞:', error);
    process.exit(1);
  }
}

startServer();