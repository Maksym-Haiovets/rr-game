import express from 'express';
import path from 'path';
import { Database } from 'sqlite3';
import { initDatabase } from './database/init';
import { positionsRouter } from './routes/positions';
import { settingsRouter } from './routes/settings';

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json());
app.use(express.static(path.join(__dirname, '../public')));

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
export let db: Database;

async function startServer() {
  try {
    console.log('üîß –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');
    db = await initDatabase();
    console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –≥–æ—Ç–æ–≤–∞');

    // –ú–∞—Ä—à—Ä—É—Ç–∏ API
    app.use('/api/positions', positionsRouter);
    app.use('/api/settings', settingsRouter);

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
    app.use((err: any, req: express.Request, res: express.Response, next: express.NextFunction) => {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', err);
      res.status(500).json({ 
        success: false, 
        error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' 
      });
    });

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:${PORT}`);
      console.log(`üìä API –¥–æ—Å—Ç—É–ø–Ω–µ –Ω–∞ http://localhost:${PORT}/api`);
    });

    // Graceful shutdown
    const gracefulShutdown = () => {
      console.log('\nüîÑ –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
      if (db) {
        db.close((err) => {
          if (err) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä–∏—Ç—Ç—ñ –ë–î:', err);
          } else {
            console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –∑–∞–∫—Ä–∏—Ç–∞');
          }
          process.exit(0);
        });
      } else {
        process.exit(0);
      }
    };

    process.on('SIGINT', gracefulShutdown);
    process.on('SIGTERM', gracefulShutdown);

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É:', error);
    process.exit(1);
  }
}

startServer();